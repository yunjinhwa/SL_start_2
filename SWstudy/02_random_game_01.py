'''
    숫자 추측 게임

    문제분석
    사용자가 입력한 값과 컴퓨터가 생성한 랜덤 값(1,30)을 비교한다
    몇 번 만에 맞췄는지 알려준다

    사용자에게 힌트를 준다.
    사용자가 입력한 값이 랜덤 값보다 크거나 작은지 알려준다

    사용자가 값을 입력하여 힌트를 받을 때 마다 count를 증가한다.

    게임은 실행할 것인지 질문 후 종료하거나 다시 게임을 실행할지 결정한다
'''

#알고리즘
#1. 랜덤 모듈 추가
#2. 무한반복 시작
#   1) 랜덤 수를 생성한다(1~30)
#   2) 값을 입력받는다
#   3) 무한반복 시작
#       A)입력받은 값과 생성된 랜덤 수의 크기를 비교한다
#           a. 입력받은 수가 더 크면 입력받은 숫자보다 작습니다 출력
#               a-1 카운트 1 추가
#           b. 입력받은 수가 더 작으면 입력받은 숫자보다 큽니다 출력
#               a-1 카운트 1 추가
#           c. 입력받은 수가 같으면 
#               무한반복 탈출
#           정답입니다 출력
#           count 출력
#   4) 게임을 더 할것인가?
#       A) 아니오를 입력받으면 무한반복 탈출


import random #랜덤모듈 추가

while True: #무한반복
    count = 1 
    num = random.randint(1,30) #랜덤 값 생성
    while True:
        su = int(input("수를 입력하세요")) #수 입력받기
        if su > num: #입력받은 수가 더 클 경우
            print("입력받은 숫자가 더 큽니다")
        elif su < num: #입력받은 수가 더 작을 경우
            print("입력받은 숫자가 더 작습니다")
        elif su == num: #입력받은 수가 랜덤 값과 같을 경우
            break
        count = count + 1 #카운트 세기
    print("정답입니다")
    print("{}번만에 맞추셨습니다.".format(count))
    retry = input("게임을 더 하시겠습니까? YES OR NO: ") #게임 추가적으로 실행여부 입력받기
    lower_retry = retry.lower() #입력받은 값 소문자로 전환
    if lower_retry == "yes": #입력받은 값 판별
        print("--------------------------------")
        continue
    else:
        break
    